name: 'Demo 02 - Storage Account'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      location:
        description: 'Azure region'
        required: true
        default: 'East US'
        type: choice
        options:
          - 'East US'
          - 'West US 2'
          - 'West Europe'
          - 'Southeast Asia'
      storage_tier:
        description: 'Storage Account Tier'
        required: true
        default: 'Standard'
        type: choice
        options:
          - Standard
          - Premium
      replication_type:
        description: 'Storage Replication Type'
        required: true
        default: 'LRS'
        type: choice
        options:
          - LRS
          - GRS
          - RAGRS
          - ZRS

env:
  TF_VAR_environment: ${{ github.event.inputs.environment }}
  TF_VAR_location: ${{ github.event.inputs.location }}
  TF_VAR_storage_account_tier: ${{ github.event.inputs.storage_tier }}
  TF_VAR_storage_replication_type: ${{ github.event.inputs.replication_type }}

jobs:
  terraform:
    name: 'Demo 02 - Terraform'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    defaults:
      run:
        working-directory: ./demo-02-storage/terraform
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.0

    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
      run: terraform plan -no-color -input=false

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve -input=false

    - name: Output Results
      if: github.event.inputs.action == 'apply'
      run: terraform output
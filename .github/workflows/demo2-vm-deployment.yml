name: 'Demo 2: VM Deployment'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - deploy
        - destroy
      admin_password:
        description: 'Admin password for Windows VM (required for deploy/destroy) - must meet Azure complexity requirements'
        required: false
        type: string
      vm_size:
        description: 'VM Size'
        required: false
        default: 'Standard_B2s'
        type: choice
        options:
        - Standard_B1s
        - Standard_B2s
        - Standard_B4ms

env:
  TF_VERSION: '1.5.0'
  WORKING_DIRECTORY: './demo2-vm-deployment'

jobs:
  terraform:
    name: 'Demo 2 - VM Deployment'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      run: |
        # For planning, we use the provided password via environment variable
        # This ensures no password is exposed in the command line or logs
        terraform plan \
          -var="vm_size=${{ github.event.inputs.vm_size }}" \
          -out=tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_admin_password: ${{ github.event.inputs.admin_password }}

    - name: Terraform Apply
      if: github.event.inputs.action == 'deploy'
      run: |
        if [ -n "${{ github.event.inputs.admin_password }}" ]; then
          terraform apply -auto-approve \
            -var="vm_size=${{ github.event.inputs.vm_size }}"
        else
          echo "Admin password is required for Windows VM deployment"
          echo "Please provide a secure admin password in the workflow inputs"
          echo "Password must meet Azure complexity requirements (8+ chars, uppercase, lowercase, number, special char)"
          exit 1
        fi
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_admin_password: ${{ github.event.inputs.admin_password }}

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: |
        if [ -n "${{ github.event.inputs.admin_password }}" ]; then
          terraform destroy -auto-approve \
            -var="vm_size=${{ github.event.inputs.vm_size }}"
        else
          echo "Admin password is required for destroying Windows VM deployment"
          echo "Please provide a secure admin password in the workflow inputs"
          echo "Password must meet Azure complexity requirements (8+ chars, uppercase, lowercase, number, special char)"
          exit 1
        fi
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_admin_password: ${{ github.event.inputs.admin_password }}

    - name: Get Terraform Outputs
      if: github.event.inputs.action == 'deploy'
      id: tf-outputs
      run: |
        PUBLIC_IP=$(terraform output -raw public_ip_address)
        RDP_COMMAND=$(terraform output -raw rdp_connection_command)
        echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT
        echo "rdp_command=$RDP_COMMAND" >> $GITHUB_OUTPUT
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Output Summary
      if: github.event.inputs.action == 'deploy'
      run: |
        echo "## Demo 2 Windows VM Deployment Complete! 🚀" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Resources Created:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Resource Group" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Virtual Network & Subnet" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Network Security Group" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Public IP Address" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Windows Server 2022 Virtual Machine" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Access Your Windows VM:" >> $GITHUB_STEP_SUMMARY
        echo "- **RDP Access**: ${{ steps.tf-outputs.outputs.rdp_command }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- 🖥️ Use RDP to connect and explore the Windows Server environment" >> $GITHUB_STEP_SUMMARY
        echo "- 🎯 Try Demo 3 for a full application deployment" >> $GITHUB_STEP_SUMMARY
        echo "- 💰 **Important**: Destroy resources when done to avoid charges" >> $GITHUB_STEP_SUMMARY
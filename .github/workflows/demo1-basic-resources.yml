name: 'Demo 1: Basic Resources'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - deploy
        - destroy
      storage_account_name:
        description: 'Storage Account Name (must be globally unique)'
        required: false
        default: 'sammsdemomusicconf01'
        type: string

env:
  TF_VERSION: '1.5.0'
  WORKING_DIRECTORY: './demo1-basic-resources'

jobs:
  terraform:
    name: 'Demo 1 - Basic Resources'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      run: |
        terraform plan \
          -var="storage_account_name=${{ github.event.inputs.storage_account_name }}" \
          -out=tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Apply
      if: github.event.inputs.action == 'deploy'
      run: |
        terraform apply -auto-approve \
          -var="storage_account_name=${{ github.event.inputs.storage_account_name }}"
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: |
        terraform destroy -auto-approve \
          -var="storage_account_name=${{ github.event.inputs.storage_account_name }}"
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Output Summary
      if: github.event.inputs.action == 'deploy'
      run: |
        echo "## Demo 1 Deployment Complete! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Resources Created:" >> $GITHUB_STEP_SUMMARY
        echo "- Resource Group" >> $GITHUB_STEP_SUMMARY
        echo "- Storage Account" >> $GITHUB_STEP_SUMMARY
        echo "- Storage Container" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Check the Azure Portal to see your resources" >> $GITHUB_STEP_SUMMARY
        echo "- Try Demo 2 for VM deployment" >> $GITHUB_STEP_SUMMARY
        echo "- Remember to destroy resources when done to avoid charges" >> $GITHUB_STEP_SUMMARY
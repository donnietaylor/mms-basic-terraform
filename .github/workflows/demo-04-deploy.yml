name: 'Demo 04 - App Service'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      location:
        description: 'Azure region'
        required: true
        default: 'East US'
        type: choice
        options:
          - 'East US'
          - 'West US 2'
          - 'West Europe'
          - 'Southeast Asia'
      app_service_sku:
        description: 'App Service Plan SKU'
        required: true
        default: 'B1'
        type: choice
        options:
          - F1
          - D1
          - B1
          - B2
          - B3
          - S1
          - S2
          - S3
          - P1v2
          - P2v2
          - P3v2
      node_version:
        description: 'Node.js Version'
        required: true
        default: '18-lts'
        type: choice
        options:
          - '16-lts'
          - '18-lts'
          - '20-lts'
      create_staging_slot:
        description: 'Create Staging Slot'
        required: true
        default: false
        type: boolean

env:
  TF_VAR_environment: ${{ github.event.inputs.environment }}
  TF_VAR_location: ${{ github.event.inputs.location }}
  TF_VAR_app_service_plan_sku: ${{ github.event.inputs.app_service_sku }}
  TF_VAR_node_version: ${{ github.event.inputs.node_version }}
  TF_VAR_create_staging_slot: ${{ github.event.inputs.create_staging_slot }}

jobs:
  terraform:
    name: 'Demo 04 - Terraform'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    defaults:
      run:
        working-directory: ./demo-04-app/terraform
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.0

    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
      run: terraform plan -no-color -input=false

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve -input=false

    - name: Output Results
      if: github.event.inputs.action == 'apply'
      run: |
        echo "Web App Information:"
        terraform output app_service_url
        if [ "${{ github.event.inputs.create_staging_slot }}" = "true" ]; then
          echo "Staging Slot URL:"
          terraform output staging_slot_url
        fi